// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.562
package hardcoded

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func HardcodedPage() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"root\" class=\"mt-10 flex flex-row items-center justify-center bg-gray-100\"><div x-data=\"visitorCounter()\" class=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 space-y-4\"><div class=\"text-center\"><h1 class=\"text-2xl font-semibold text-gray-800\">Welcome to Our Site!</h1><p class=\"text-md text-gray-500\">Unique Visitors Count</p></div><!-- Counter Display --><div class=\"text-center\"><div x-text=\"count\" class=\"text-9xl font-extrabold text-indigo-500\" x-transition:enter=\"transition ease-out duration-700\" x-transition:enter-start=\"opacity-0 transform scale-90\" x-transition:enter-end=\"opacity-100 transform scale-100\">Loading...</div><p class=\"text-lg text-gray-600 mt-2\">People have visited this page</p></div></div><script>\nfunction visitorCounter() {\n    return {\n        count: 0,\n        init() {\n            this.fetchVisitorCount();\n            setInterval(() => {\n                this.fetchVisitorCount();\n            }, 1000); // Update the count every second\n        },\n        fetchVisitorCount() {\n            const xAPIKEY = \"f414d481-8f7b-41e5-ab5e-05814bb1f509\";\n            fetch(\"http://localhost:8081/hardcoded/metrics/visitors\", {\n                method: \"GET\",\n                headers: { \"X-API-KEY\": xAPIKEY }\n            })\n            .then(response => response.json())\n            .then(data => {\n                this.count = data.visitors;\n            })\n            .catch(error => {\n                console.error(\"Error fetching visitor count:\", error);\n            });\n        }\n    };\n}\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = openApiButton().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func openApiButton() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button hx-get=\"/hardcoded/openapi\" hx-push-url=\"true\" hx-swap=\"outerHTML\" hx-target=\"#root\" class=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded\">View API Documentation</button>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

// Change counter based on value from api
func SetVisitorsCount() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_SetVisitorsCount_07bf`,
		Function: `function __templ_SetVisitorsCount_07bf(){let counter = document.getElementById("counter");
    var xAPIKEY = "f414d481-8f7b-41e5-ab5e-05814bb1f509"
    fetch("http://localhost:8081/hardcoded/metrics/visitors", {
        method: "GET",
        headers: {
            "X-API-KEY": xAPIKEY
        }
    }).then(response => response.json())
    .then(data => {
        count = data.visitors;
    });
}`,
		Call:       templ.SafeScript(`__templ_SetVisitorsCount_07bf`),
		CallInline: templ.SafeScriptInline(`__templ_SetVisitorsCount_07bf`),
	}
}

func checkVisitorsCount() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_checkVisitorsCount_51a6`,
		Function: `function __templ_checkVisitorsCount_51a6(){setInterval(SetVisitorsCount, 1000);
}`,
		Call:       templ.SafeScript(`__templ_checkVisitorsCount_51a6`),
		CallInline: templ.SafeScriptInline(`__templ_checkVisitorsCount_51a6`),
	}
}

func OpenAPIPage() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"root\" class=\"h-full w-full flex\"><!-- Elements API and styles are moved here --><script src=\"https://unpkg.com/@stoplight/elements/web-components.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/@stoplight/elements/styles.min.css\"><!-- Elements API and styles are included here --><elements-api id=\"openapi\" apiDescriptionUrl=\"http://localhost:8081/hardcoded/openapi.yaml\" router=\"hash\" layout=\"sidebar\" class=\"flex-grow\"></elements-api></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
