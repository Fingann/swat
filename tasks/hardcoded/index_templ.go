// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package hardcoded

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func HardcodedPage() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"root\" x-data=\"{count: 0}\" x-init=\"let FetchVisitCount =  async function() {\n  const xAPIKEY = &#39;f414d481-8f7b-41e5-ab5e-05814bb1f509&#39;;\n  try {\n    const response = await fetch(&#39;http://localhost:8081/hardcoded/metrics/visitors&#39;, {\n      method: &#39;GET&#39;,\n      headers: { &#39;X-API-KEY&#39;: xAPIKEY }\n    });\n    const data = await response.json();\n    return data.visitors;\n  } catch (error) {\n    console.error(&#39;Error fetching visitor count:&#39;, error);\n    return 0;\n  }\n};\ncount = await FetchVisitCount(); setInterval(async () =&gt; { count = await FetchVisitCount(); }, 3000);\" class=\"flex flex-col items-center justify-center bg-gray-100 w-full flex-grow\"><!-- Visitor counter and title --><div class=\"flex flex-col items-center justify-center space-y-4 pt-4\"><!-- Title --><div class=\"text-center\"><h1 class=\"text-2xl font-semibold text-gray-800\">Welcome to My Popular BLOG!</h1><p class=\"text-md text-gray-500\">Unique Visitors Count</p></div><!-- Counter Display --><div class=\"text-center\"><div x-text=\"count\" class=\"text-9xl font-extrabold text-indigo-500\" x-transition:enter=\"transition ease-out duration-700\" x-transition:enter-start=\"opacity-0 transform scale-90\" x-transition:enter-end=\"opacity-100 transform scale-100\"><!-- Counter value --></div><p class=\"text-lg text-gray-600 mt-2\">People have visited this page</p></div></div></div><!-- API Button, positioned at the bottom --><div class=\"w-full px-4 py-2 flex justify-center\"><button hx-get=\"/hardcoded/openapi\" hx-push-url=\"true\" hx-swap=\"outerHTML\" hx-target=\"#root\" class=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded\">View API Documentation\r</button></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func OpenAPIPage() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"root\" class=\"h-full w-full flex\"><!-- Elements API and styles are moved here --><script src=\"https://unpkg.com/@stoplight/elements/web-components.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/@stoplight/elements/styles.min.css\"><!-- Elements API and styles are included here --><elements-api id=\"openapi\" apiDescriptionUrl=\"http://localhost:8081/hardcoded/openapi.yaml\" router=\"hash\" layout=\"sidebar\" class=\"flex-grow\"></elements-api></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
